version: '3.8'

services:
  # Spring Boot Backend
  backend:
    build: .
    ports:
      - "8080:8080"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB=${VECTOR_DB:-QDRANT}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-ai-document-search}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION_NAME=${QDRANT_COLLECTION_NAME:-documents}
      - APP_CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - APP_CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
      - APP_TOP_K_RESULTS=${TOP_K_RESULTS:-5}
    depends_on:
      - qdrant
    networks:
      - app-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - app-network

  # React Frontend (for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  qdrant_storage:

networks:
  app-network:
    driver: bridge

